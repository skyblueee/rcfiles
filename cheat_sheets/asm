# AT&T 和 Intel 语法对比
- opcode source dest          |    opcode dest source
- mov eax [ecx+ebx*4+5000]    |    mov 5000(%ecx, %ebx, 4), %eax

# ABI64
## System V AMD64 ABI
* RDI, RSI, RDX, RCX, R8, R9
* XMM0~XMM7
* 其他参数入栈(从右至左)。
* 整型返回值放置在RAX中，浮点返回值在XMM0中。
* 对于系统调用syscall，RAX存放系統調用號，用R10来替代RCX（即參數爲RDI, RSI, RDX, R10, R8, R9）。

## Microsoft ABI
* RCX, RDX, R8, R9(从左到右)
* XMM0, XMM1, XMM2, XMM3传递浮点变量
* 其他参数入栈(从右至左)。
* 整型返回值放置在RAX中，浮点返回值在XMM0中。
* 少于64位参数不做零扩展，此时高位充斥着垃圾。
