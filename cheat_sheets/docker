# Install
apt-get install apt-transport-https ca-certificates
deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
curl -fsSL https://download.docker.com/linux/debian/gpg| sudo apt-key add -
apt update && apt install docker-ce
systemctl enable docker.service

# 免sudo
sudo usermod -aG docker $USER
sudo service docker restart
newgrp - docker # 切换当前会话到新group 或者重启X会话。注意:最后一步是必须的，否则因为groups 命令获取到的是缓存的组信息，刚添加的组信息未能生效，所以 docker images 执行时同样有错。

# 快速确认配置
docker version

# 初始化一个容器
docker run --name image_name -it <image_name> /bin/bash

# "shell" into a running container (docker-1.3+)
docker exec -it <container_name> bash

# 获取容器状态信息
docker inspect <container_name> (or <container_id>)

# 查看容器的变化
docker logs container_name
docker diff container_name

# Copy files/folders between a container and your host
docker cp foo.txt mycontainer:/foo.txt

# list currently running containers
docker ps

# list all containers
docker ps -a

# list all images
docker images

# 将容器转换为镜像
docker commit container_name resp/new_image_name

# 备份与恢复镜像
docker save -o ~/image-backup.tar image-backup
docker load -i ~/image-backup.tar

# Dockerfile
## Usage:
docker build -t resp/image_name .
## format
FROM debian:wheezy
RUN apt update && apt install vim
ENTRYPOINT ["/path/to/entrypoint_executable_file"]
COPY script.sh /path/
